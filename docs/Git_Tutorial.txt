+------+
| Vocab|
+------+

Repository (Git Version) -> Each user has their own version(branch). The main trunk
							must be updated via push and pull. Users commit to their
							local repository then request a push. (Decentralized, 
							as opposed to SVN, which commits are made directly to 
							a version that everyone commits to)
	Bare Repository  	 -> Branch without a working directory. Basically const.
							Any branches from this repo will not be const.
							
	Mirror Repository	 -> Inherits bare features, and also "clones all extended
							refs and maintains remote branch tracking configuration". 
							Not sure what that means. 
		
Clone 					 -> Get(git) a copy of a repo on your machine (locally)							
							creates a branch on your machine. First step to using 
							the repo. Creates a remote connection (origin ptr)	
							
Push					 -> Commit to remote repository. Usually needs to be approved

Pull					 -> Fetch commits from remote repo and stores in local branch
							Other users can do this at any time, stay up to date by
							pulling often (pull often for your health)

Owner					 -> Users that are responsible for the code. Via 
							CODEOWNERS file

							
.gitignore(Git Ignore)   -> file type to be placed in root directory. specifies which
							local files to ignore during push/pull
							there are templates for this on github.
							https://git-scm.com/docs/gitignore
						* -> "wildcard match"
						/ -> ignore pathnames relative to file
						# -> comment

						

+------+
| CMD  |
+------+
// Note on git bash, make sure you are using the contextual "Git bash here"
// in the same folder as the .git folder (may be hidden). Once the cmd prompt is 
// up, the branch you are currently in will be in parenthesis	

// Check the status of staging area, check if local branch is up to date
$ git status


// add to staging area(index), track files 
$ git add File_Name
$ git add *.txt			// All .txt in curr directory
$ git add docs/*.txt	//	" 	"	in specified directory	
$ git add docs/			// all files in specified directory

// once added to staging area, do commit.
$ git commit -m "Commit Message"

// Push to main trunk
$ git push -u origin master 
$ git push -u <remote repo ptr> <name of your branch> 

// creates .gitignore_global					
$ git config --global core.excludesfile ~/.gitignore_global 

// Clone
$ git clone <repoURL> <localDirectory> 
$ git clone -branch <branchName> <repoURL> 
$ git clone --bare <repoURL> 
$ git clone --mirror <repoURL>


+-------------+
| URL Format  |
+-------------+
// Replace these with any <repoURL>
// Pretty sure port is optional

Secure Shell (SSH) 						-> Authenticated. Need login credentials.
					  
> ssh://[user@]host.xz[:port]/path/to/repo.git/
> ssh://john@example.com/path/to/my-project.git 

GIT 			   						-> No Authentication. Runs on port 9418
> git://host.xz[:port]/path/to/repo.git/
> git://remoterepository.git

Hyper Text Transfer Protocol (HTTP) 	-> Its how the internet communicates 
> http[s]://host.xz[:port]/path/to/repo.git/
> 


+---------+
| Sources |
+---------+
https://www.geeksforgeeks.org/what-is-a-git-repository/
https://www.atlassian.com/git/tutorials/learn-git-with-bitbucket-cloud









